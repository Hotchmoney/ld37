<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamestate = 0;
level = obj_gamemanager.cur_asteroid_level;
asteroid_counter = 0;
asteroid_time = 0;
lag = false;
instance_create(view_xview+view_wview*0.5, view_yview + view_hview*0.5,obj_player_asteroid);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gamestate==0)
{
 var b = (round(asteroid_time));
 if ( b mod 7 == 0 and asteroid_counter &lt;((4*level)+6*2))
 {
    level+=1;
    asteroid_time+=0.5;
    var i;
    for (i=0; i &lt; ((4*level)+6); i +=1)
    {
        var k = random_range(-300,300);
        if (k &lt;50 and k &gt; -50){ k +=200; }
        instance_create(obj_player_asteroid.x+k, obj_player_asteroid.y+k*2, obj_asteroids_asteroid);
        instance_create(obj_player_asteroid.x+k,obj_player_asteroid.y+k*2, obj_asteroids_asteroid);
        asteroid_counter +=2;
    }
 }
 
 asteroid_time = asteroid_time + (delta_time/1000000);
 
}else{
//lose
    obj_gamemanager.score_asteroids = level;
    obj_gamemanager.cur_asteroid_level=0;
    room_restart();
}

if (asteroid_time mod 15 == 0){
    level +=1;
}



if (keyboard_check(vk_escape)){
    obj_gamemanager.cur_asteroid_level = 0;
    room_goto(main_room);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> draw_set_colour(c_white);
 draw_text(10,10,"Level : "+string(level));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
